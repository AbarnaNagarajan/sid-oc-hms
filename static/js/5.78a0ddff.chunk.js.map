{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","Views/Modules/Appointment/Appointment.js"],"names":["Tablelvl2Context","React","TableContext","defaultComponent","Table","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","Provider","value","_extends","role","clsx","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","action","alpha","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","borderBottom","type","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","TableBody","useStyles","makeStyles","container","flexWrap","formControl","margin","minWidth","textField","marginLeft","marginRight","patientIds","label","DialogSelect","useState","redirectAppointment","setRedirectAppointment","patientId","setPatientId","dialogActionClass","fontFamily","handleChange","event","target","createData","patientID","patientName","appointmentDate","remarks","physician","rows","style","height","noValidate","autoComplete","flex","item","xs","id","defaultValue","InputLabelProps","shrink","select","onChange","e","SelectProps","native","helperText","map","option","InputProps","startAdornment","onClick","row","from","to"],"mappings":"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","file":"static/js/5.78a0ddff.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'normal' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, alpha, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'normal');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'normal' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`normal`).\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nconst patientIds = [\r\n  {\r\n    value: 0,\r\n    label: \"Please Select\",\r\n  },\r\n  {\r\n    value: 1,\r\n    label: \"AAAA\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"BBBB\",\r\n  },\r\n];\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [redirectAppointment, setRedirectAppointment] = React.useState(false);\r\n  const [patientId, setPatientId] = React.useState(\"\");\r\n  const dialogActionClass = { fontWeight: \"bold\", fontFamily: \"initial\" };\r\n  const handleChange = (event) => {\r\n    setPatientId(event.target.value);\r\n  };\r\n\r\n  function createData(\r\n    patientID,\r\n    patientName,\r\n    appointmentDate,\r\n    remarks,\r\n    physician\r\n  ) {\r\n    return { patientID, patientName, appointmentDate, remarks, physician };\r\n  }\r\n\r\n  const rows = [\r\n    createData(\"SOC01\", \"Eclair\", \"2021-01-04\", \"Follow Up\", \"Dr.Anand\"),\r\n    createData(\"SOC02\", \"KitKat\", \"2021-01-03\", \"Follow Up\", \"Dr.Anand\"),\r\n    createData(\"SOC03\", \"Munch\", \"2021-01-02\", \"Follow Up\", \"Dr.Anand\"),\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: 550, width: \"100%\", background: \"#fafafa\" }}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <Grid container spacing={1} style={{ padding: \"25px\" }}>\r\n          <br />\r\n          <label\r\n            style={{\r\n              fontSize: \"25px\",\r\n              padding: \"4px 4px 0px\",\r\n              flex: \"1 1 100%\",\r\n              fontWeight: \"bolder\",\r\n              fontFamily: \"serif\",\r\n            }}\r\n          >\r\n            Appointment Form\r\n          </label>\r\n          <br />\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Grid\r\n            container\r\n            item\r\n            xs={13}\r\n            spacing={1}\r\n            style={{ padding: \"15px\", background: \"#d7f4ff\" }}\r\n          >\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Next appointment\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-patient-id\"\r\n                select\r\n                label=\"Patient Id\"\r\n                value={patientId}\r\n                onChange={(e) => handleChange(e, 1)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                style={{ width: \"230px\" }}\r\n                helperText=\"\"\r\n              >\r\n                {patientIds.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ width: \"230px\", fontSize: \"small\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Remarks\"\r\n                id=\"standard-start-adornment\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\"></InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-patient-id\"\r\n                select\r\n                label=\"Physician\"\r\n                value={patientId}\r\n                onChange={(e) => handleChange(e, 1)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                style={{ width: \"230px\" }}\r\n                helperText=\"\"\r\n              >\r\n                {patientIds.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ width: \"230px\", fontSize: \"small\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={3}>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <Button\r\n                onClick={() => setRedirectAppointment(true)}\r\n                style={{ background: \"#3f51b5\", color: \"white\" }}\r\n              >\r\n                Book\r\n              </Button>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <Button\r\n                onClick={() => setRedirectAppointment(true)}\r\n                style={{ background: \"brown\", color: \"white\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={13} spacing={1}>\r\n            <div style={{ width: \"100%\", color: \"#fff\" }}>.</div>\r\n          </Grid>\r\n          <Grid container item xs={13} spacing={1}>\r\n            <label\r\n              style={{\r\n                fontSize: \"20px\",\r\n                padding: \"4px 4px 0px\",\r\n                flex: \"1 1 100%\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"serif\",\r\n              }}\r\n            >\r\n              Future Appointment Details\r\n            </label>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        {/* <caption>A basic table example with a caption</caption> */}\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={dialogActionClass}>PatientID</TableCell>\r\n            <TableCell align=\"right\" style={dialogActionClass}>\r\n              PatientName\r\n            </TableCell>\r\n            <TableCell align=\"right\" style={dialogActionClass}>\r\n              AppointmentDate\r\n            </TableCell>\r\n            <TableCell align=\"right\" style={dialogActionClass}>\r\n              Remarks\r\n            </TableCell>\r\n            <TableCell align=\"right\" style={dialogActionClass}>\r\n              Physician\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.patientID}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.patientID}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.patientName}</TableCell>\r\n              <TableCell align=\"right\">{row.appointmentDate}</TableCell>\r\n              <TableCell align=\"right\">{row.remarks}</TableCell>\r\n              <TableCell align=\"right\">{row.physician}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {redirectAppointment ? (\r\n        <Redirect from=\"/Appointment\" to=\"/OPGrid\" />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}