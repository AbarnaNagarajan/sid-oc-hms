{"version":3,"sources":["Routes.js","Dashboard/Dashboard.js","Views/Account/Login.js","App.js","reportWebVitals.js","index.js"],"names":["routes","path","name","component","React","lazy","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","background","color","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","style","ListItemText","primary","direction","Divider","map","text","index","Link","to","title","startsWith","icon","faHospitalUser","fixedWidth","size","faCalendarCheck","faPlusCircle","faSignOutAlt","fallback","route","idx","exact","render","props","loginStyles","container","iloadsLogo","textAlign","top","left","height","opacity","loginContent","marginTop","boxShadow","borderRadius","iloads","marginBottom","font","letterSpacing","loginBtn","float","margin","div","empty","alertBackground","forgetPassword","TenantSelection","fontSize","Login","redirection","setRedirection","load","onFormSubmit","setonFormSubmit","validationMessage","setValidationMessage","UserName","Password","loginData","setLoginData","onLoginCredentialsChange","event","target","value","disableCredentials","Container","maxWidth","Grid","item","xs","onSubmit","preventDefault","localStorage","setItem","Paper","TextField","fullWidth","label","placeholder","error","InputProps","startAdornment","InputAdornment","disabled","type","id","onChange","helperText","Alert","severity","Button","CircularProgress","getItem","from","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4788c2b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst OP = React.lazy(() => import(\"./Views/Modules/OP/OPView\"));\r\nconst OPGrid = React.lazy(() => import(\"./Views/Modules/OP/OPViewGird\"));\r\nconst Registration = React.lazy(() =>\r\n  import(\"./Views/Modules/OP/Registration\")\r\n);\r\nconst Appointment = React.lazy(() =>\r\n  import(\"./Views/Modules/Appointment/Appointment\")\r\n);\r\n\r\nconst routes = [\r\n  { path: \"/OP\", name: \"OP\", component: OP },\r\n  { path: \"/OPGrid\", name: \"OPGrid\", component: OPGrid },\r\n  { path: \"/Register\", name: \"Register\", component: Registration },\r\n  { path: \"/Appointment\", name: \"Appointment\", component: Appointment },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport routes from \"../Routes\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHospitalUser,\r\n  faCalendarCheck,\r\n  faPlusCircle,\r\n  faSignOutAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    background: \"#3f51b5\",\r\n    color: \"#fff\",\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    background: \"#3f51b5\",\r\n    color: \"#fff\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Hospital Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <List>\r\n            <ListItem button key={\"Ortho Care\"}>\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Ortho Care\"} />\r\n            </ListItem>\r\n          </List>\r\n          <IconButton onClick={handleDrawerClose} style={{ color: \"#fff\" }}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[/*\"OP\",*/ \"OPGrid\", \"Appointment\", \"Register\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              component={Link}\r\n              to={\"/\" + text}\r\n              title={text}\r\n            >\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                {text.startsWith(\"OP\")  ? (\r\n                  <FontAwesomeIcon icon={faHospitalUser} fixedWidth size=\"lg\" />\r\n                ) : text === \"Appointment\" ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faCalendarCheck}\r\n                    fixedWidth\r\n                    size=\"lg\"\r\n                  />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faPlusCircle} fixedWidth size=\"lg\" />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"Logout\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              component={Link}\r\n              to={\"/Login\"}\r\n              title={text}\r\n            >\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                {<FontAwesomeIcon icon={faSignOutAlt} fixedWidth size=\"lg\" />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Suspense fallback={loading()}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component ? (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={(props) => <route.component {...props} />}\r\n                />\r\n              ) : null;\r\n            })}\r\n          </Switch>\r\n        </Suspense>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Paper, TextField, Button, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst loginStyles = makeStyles((theme) => ({\r\n    container: {\r\n        flexGrow: 1,\r\n    },\r\n    iloadsLogo: {\r\n        textAlign: 'right',\r\n        top: '-6px',\r\n        left: '1612px',\r\n        width: '286px',\r\n        height: '189px',\r\n        background: 'transparent 0% 0% no-repeat padding-box',\r\n        opacity: 1,\r\n    },\r\n    loginContent: {\r\n        marginTop: '-43px',\r\n        marginLeft: '170px',\r\n        width: '420px',\r\n        height: '420px',\r\n        background: '#FFFFFF 0% 0% no-repeat padding-box',\r\n        boxShadow: '15px 30px 65px #00000052',\r\n        borderRadius: '15px',\r\n        opacity: 1,\r\n    },\r\n    iloads: {\r\n        marginTop: '40px',\r\n        marginBottom: '-15px',\r\n        marginLeft: '50px',\r\n        marginRight: '50px',\r\n        width: '320px',\r\n        height: '15px',\r\n        textAlign: 'left',\r\n        font: 'normal normal 300 30px Open Sans',\r\n        letterSpacing: '0px',\r\n        color: '#07060B',\r\n        opacity: 1,\r\n    },\r\n    loginBtn: {\r\n        marginTop: '-20px',\r\n        marginLeft: '50px',/*210px*/\r\n        float: 'right',\r\n        marginRight: '12%',\r\n        marginBottom: '10%',\r\n        font: 'normal normal 17px Open Sans',\r\n        letterSpacing: '0px',\r\n        background: '#190F4C',\r\n        color: '#FFFFFF',\r\n        opacity: 1,\r\n        width: '140px',\r\n        height: '35px',\r\n    },\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    div: {\r\n        marginLeft: '5%',\r\n        marginRight: '5%'\r\n    },\r\n    empty: {\r\n        width: '100%',\r\n        color: '#fff'\r\n    },\r\n    alertBackground: {\r\n        background: '#FFFFFF',\r\n        marginLeft: '35px',\r\n        marginTop: '-30px',\r\n        color: '#f44336'\r\n    },\r\n    forgetPassword: {\r\n        marginLeft: '50px',\r\n    },\r\n    TenantSelection: {\r\n        marginTop: \"35px\",\r\n        marginLeft: \"50px\",\r\n        marginRight: \"50px\",\r\n        fontSize: \"smaller\"\r\n    }\r\n}));\r\n\r\nfunction Login() {\r\n    /*For redirection purpose on login*/\r\n    //const history = useHistory();\r\n\r\n    /*Redirection purpose on login*/\r\n    const [redirection, setRedirection] = useState(false);\r\n\r\n    /*Loads the style for the form*/\r\n    const classes = loginStyles();\r\n\r\n    /*For showing the loading icon*/\r\n    const [load, setLoad] = useState(false);\r\n\r\n    /*For checking whether to show the error messages*/\r\n    const [onFormSubmit, setonFormSubmit] = useState(false);\r\n\r\n    /*Error message to be shown*/\r\n    const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n    /*For maintaining the user credentials*/\r\n    const [loginData, setLoginData] = useState({ UserName: \"\", Password: \"\" });\r\n\r\n    /*On changing the credentials*/\r\n    const onLoginCredentialsChange = (event) => {\r\n        setLoginData({ ...loginData, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    const [disableCredentials, setDisableCredentials] = useState(false);\r\n\r\n    /*User form submit*/\r\n    const onUserLogin = (event) => {\r\n        setonFormSubmit(true);\r\n        setValidationMessage(\"\");\r\n        setRedirection(true);\r\n        event.preventDefault();\r\n        localStorage.setItem(\"UserID\", 1);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <Container className={classes.container} maxWidth=\"lg\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} className={classes.iloadsLogo}>\r\n                        <Typography>\r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <form onSubmit={onUserLogin}>\r\n                    <Paper className={classes.loginContent}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.iloads}>\r\n                                    Siddharth Ortho Care\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}></Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField variant=\"outlined\" className={classes.iloads} fullWidth label=\"Username\" placeholder=\"UserName\" error={loginData.UserName === \"\" && onFormSubmit} InputProps=\r\n                                    {{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <PersonIcon fontSize=\"inherit\" />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }} disabled={disableCredentials}\r\n                                    type=\"text\" id=\"standard-basic\" name=\"UserName\" value={loginData.UserName} onChange={onLoginCredentialsChange} helperText={loginData.UserName === \"\" && onFormSubmit ? \"Username is required!\" : \" \"} />\r\n                            </Grid>\r\n                            <Grid item xs={12}></Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField variant=\"outlined\" className={classes.iloads} fullWidth label=\"Password\" placeholder=\"Password\" error={loginData.Password === \"\" && onFormSubmit} InputProps=\r\n                                    {{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <LockIcon fontSize=\"inherit\" />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }} disabled={disableCredentials}\r\n                                    type=\"password\" id=\"standard-basic\" name=\"Password\" value={loginData.Password} onChange={onLoginCredentialsChange} helperText={loginData.Password === \"\" && onFormSubmit ? \"Password is required!\" : \" \"} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.TenantSelection}>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}></Grid>\r\n                            <Grid item xs={12}>\r\n                                <Alert icon={false} className={classes.alertBackground} severity=\"error\"><strong>{validationMessage}</strong></Alert>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button className={classes.loginBtn} type=\"submit\" variant=\"contained\" disabled={load}>\r\n                                    LOGIN {load ? <CircularProgress size={13} /> : null}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </form>\r\n                {/*------------------- Popup COMPONENT ----------------------------*/}\r\n                {/* { openDialog ? <CommonDialog openCommonDialogStatus={openDialog} setCommonDialogTitle={errorDialogDetails.errorDialogTitle} setDialogContent={errorDialogDetails.errorDialogContent} setDialogButtonContent={errorDialogDetails.errorDialogButtonContent} setRedirectionPagePath={\"\"} /> : null} */}\r\n                {redirection && (localStorage.getItem(\"UserID\") !== null) ? <Redirect from=\"/Login\" to=\"/Dashboard\" /> : null}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*we can use the required param in the TextField and it will automatically shows the please fill out this field pop up*/\r\n\r\n/*\r\nInvalid = 1,\r\nExpired = 2,\r\nSuccess = 3,\r\nException = 4\r\n*/\r\n\r\nexport default Login;","import { Suspense } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport LoginPage from \"./Views/Account/Login\";\r\nimport React from \"react\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter  basename={'/sid-oc-hms/'}>\r\n      <Suspense fallback={loading()}>\r\n        <Switch>\r\n          <Route\r\n            path=\"/Dashboard\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Login\"\r\n            render={(props) => <LoginPage {...props} />}\r\n          />\r\n          <Route path=\"/OP\" render={(props) => <Dashboard {...props} />} />\r\n          <Route path=\"/OPGrid\" render={(props) => <Dashboard {...props} />} />\r\n          <Route path=\"/OPTable\" render={(props) => <Dashboard {...props} />} />\r\n          <Route\r\n            path=\"/Appointment\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/Register\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/Schedule\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route exact path=\"/\" render={(props) => <LoginPage {...props} />} />\r\n        </Switch>\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}