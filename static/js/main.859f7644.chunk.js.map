{"version":3,"sources":["Routes.js","Dashboard/Dashboard.js","Views/Account/Login.js","App.js","reportWebVitals.js","index.js"],"names":["routes","path","name","component","React","lazy","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","background","color","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","style","ListItemText","primary","direction","Divider","map","text","index","Link","to","title","startsWith","icon","faHospitalUser","fixedWidth","size","faCalendarCheck","faPlusCircle","faSignOutAlt","fallback","route","idx","exact","render","props","loginStyles","container","logo","textAlign","top","left","height","opacity","loginContent","marginTop","boxShadow","borderRadius","hname","marginBottom","font","letterSpacing","fontWeight","loginBtn","float","margin","div","empty","alertBackground","forgetPassword","TenantSelection","fontSize","Login","redirection","setRedirection","load","onFormSubmit","setonFormSubmit","validationMessage","setValidationMessage","UserName","Password","loginData","setLoginData","onLoginCredentialsChange","event","target","value","disableCredentials","Container","maxWidth","Grid","item","xs","onSubmit","preventDefault","undefined","localStorage","setItem","Paper","TextField","fullWidth","label","placeholder","error","InputProps","startAdornment","InputAdornment","disabled","type","id","onChange","helperText","Alert","severity","Button","CircularProgress","getItem","from","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.859f7644.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst OP = React.lazy(() => import(\"./Views/Modules/OP/OPView\"));\r\nconst OPGrid = React.lazy(() => import(\"./Views/Modules/OP/OPViewGird\"));\r\nconst Registration = React.lazy(() =>\r\n  import(\"./Views/Modules/OP/Registration\")\r\n);\r\nconst Appointment = React.lazy(() =>\r\n  import(\"./Views/Modules/Appointment/Appointment\")\r\n);\r\n\r\nconst routes = [\r\n  { path: \"/OP\", name: \"OP\", component: OP },\r\n  { path: \"/OPGrid\", name: \"OPGrid\", component: OPGrid },\r\n  { path: \"/Register\", name: \"Register\", component: Registration },\r\n  { path: \"/Appointment\", name: \"Appointment\", component: Appointment },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport routes from \"../Routes\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHospitalUser,\r\n  faCalendarCheck,\r\n  faPlusCircle,\r\n  faSignOutAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    background: \"#3f51b5\",\r\n    color: \"#fff\",\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    background: \"#3f51b5\",\r\n    color: \"#fff\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Hospital Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <List>\r\n            <ListItem button key={\"Ortho Care\"}>\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Ortho Care\"} />\r\n            </ListItem>\r\n          </List>\r\n          <IconButton onClick={handleDrawerClose} style={{ color: \"#fff\" }}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[/*\"OP\",*/ \"OPGrid\", \"Appointment\", \"Register\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              component={Link}\r\n              to={\"/\" + text}\r\n              title={text}\r\n            >\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                {text.startsWith(\"OP\")  ? (\r\n                  <FontAwesomeIcon icon={faHospitalUser} fixedWidth size=\"lg\" />\r\n                ) : text === \"Appointment\" ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faCalendarCheck}\r\n                    fixedWidth\r\n                    size=\"lg\"\r\n                  />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faPlusCircle} fixedWidth size=\"lg\" />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"Logout\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              component={Link}\r\n              to={\"/Login\"}\r\n              title={text}\r\n            >\r\n              <ListItemIcon style={{ color: \"#fff\" }}>\r\n                {<FontAwesomeIcon icon={faSignOutAlt} fixedWidth size=\"lg\" />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Suspense fallback={loading()}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component ? (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={(props) => <route.component {...props} />}\r\n                />\r\n              ) : null;\r\n            })}\r\n          </Switch>\r\n        </Suspense>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst loginStyles = makeStyles((theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    textAlign: \"right\",\r\n    top: \"-6px\",\r\n    left: \"1612px\",\r\n    width: \"286px\",\r\n    height: \"189px\",\r\n    background: \"transparent 0% 0% no-repeat padding-box\",\r\n    opacity: 1,\r\n  },\r\n  loginContent: {\r\n    marginTop: \"-43px\",\r\n    marginLeft: \"170px\",\r\n    width: \"420px\",\r\n    height: \"420px\",\r\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\r\n    boxShadow: \"15px 30px 65px #00000052\",\r\n    borderRadius: \"15px\",\r\n    opacity: 1,\r\n  },\r\n  hname: {\r\n    marginTop: \"40px\",\r\n    marginBottom: \"-15px\",\r\n    marginLeft: \"50px\",\r\n    marginRight: \"50px\",\r\n    width: \"320px\",\r\n    height: \"15px\",\r\n    textAlign: \"left\",\r\n    font: \"normal normal 300 30px Open Sans\",\r\n    letterSpacing: \"0px\",\r\n    color: \"#07060B\",\r\n    opacity: 1,\r\n    fontWeight: \"bold\",\r\n  },\r\n  loginBtn: {\r\n    marginTop: \"-20px\",\r\n    marginLeft: \"50px\" /*210px*/,\r\n    float: \"right\",\r\n    marginRight: \"12%\",\r\n    marginBottom: \"10%\",\r\n    font: \"normal normal 17px Open Sans\",\r\n    letterSpacing: \"0px\",\r\n    background: \"#190F4C\",\r\n    color: \"#FFFFFF\",\r\n    opacity: 1,\r\n    width: \"140px\",\r\n    height: \"35px\",\r\n  },\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  div: {\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n  empty: {\r\n    width: \"100%\",\r\n    color: \"#fff\",\r\n  },\r\n  alertBackground: {\r\n    background: \"#FFFFFF\",\r\n    marginLeft: \"35px\",\r\n    marginTop: \"-30px\",\r\n    color: \"#f44336\",\r\n  },\r\n  forgetPassword: {\r\n    marginLeft: \"50px\",\r\n  },\r\n  TenantSelection: {\r\n    marginTop: \"35px\",\r\n    marginLeft: \"50px\",\r\n    marginRight: \"50px\",\r\n    fontSize: \"smaller\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  /*For redirection purpose on login*/\r\n  //const history = useHistory();\r\n\r\n  /*Redirection purpose on login*/\r\n  const [redirection, setRedirection] = useState(false);\r\n\r\n  /*Loads the style for the form*/\r\n  const classes = loginStyles();\r\n\r\n  /*For showing the loading icon*/\r\n  const [load, setLoad] = useState(false);\r\n\r\n  /*For checking whether to show the error messages*/\r\n  const [onFormSubmit, setonFormSubmit] = useState(false);\r\n\r\n  /*Error message to be shown*/\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  /*For maintaining the user credentials*/\r\n  const [loginData, setLoginData] = useState({ UserName: \"\", Password: \"\" });\r\n\r\n  /*On changing the credentials*/\r\n  const onLoginCredentialsChange = (event) => {\r\n    setLoginData({ ...loginData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [disableCredentials, setDisableCredentials] = useState(false);\r\n\r\n  /*User form submit*/\r\n  const onUserLogin = (event) => {\r\n    setValidationMessage(\"\");\r\n    event.preventDefault();\r\n    if (\r\n      loginData.UserName === undefined ||\r\n      loginData.UserName === null ||\r\n      loginData.UserName === \"\" ||\r\n      loginData.Password === undefined ||\r\n      loginData.Password === null ||\r\n      loginData.Password === \"\"\r\n    ) {\r\n      setonFormSubmit(true);\r\n    } else {\r\n      setonFormSubmit(true);\r\n      setRedirection(true);\r\n      localStorage.setItem(\"UserID\", 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className={classes.container} maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} className={classes.logo}>\r\n            <Typography></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <form onSubmit={onUserLogin}>\r\n          <Paper className={classes.loginContent}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Typography className={classes.hname}>\r\n                  Siddharth Ortho Care\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}></Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.hname}\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  placeholder=\"UserName\"\r\n                  error={loginData.UserName === \"\" && onFormSubmit}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <PersonIcon fontSize=\"inherit\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  disabled={disableCredentials}\r\n                  type=\"text\"\r\n                  id=\"standard-basic\"\r\n                  name=\"UserName\"\r\n                  value={loginData.UserName}\r\n                  onChange={onLoginCredentialsChange}\r\n                  helperText={\r\n                    loginData.UserName === \"\" && onFormSubmit\r\n                      ? \"Username is required!\"\r\n                      : \" \"\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}></Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.hname}\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  placeholder=\"Password\"\r\n                  error={loginData.Password === \"\" && onFormSubmit}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <LockIcon fontSize=\"inherit\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  disabled={disableCredentials}\r\n                  type=\"password\"\r\n                  id=\"standard-basic\"\r\n                  name=\"Password\"\r\n                  value={loginData.Password}\r\n                  onChange={onLoginCredentialsChange}\r\n                  helperText={\r\n                    loginData.Password === \"\" && onFormSubmit\r\n                      ? \"Password is required!\"\r\n                      : \" \"\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography className={classes.TenantSelection}></Typography>\r\n              </Grid>\r\n              <Grid item xs={12}></Grid>\r\n              <Grid item xs={12}>\r\n                <Alert\r\n                  icon={false}\r\n                  className={classes.alertBackground}\r\n                  severity=\"error\"\r\n                >\r\n                  <strong>{validationMessage}</strong>\r\n                </Alert>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  style={{\r\n                    marginTop: \"-20px\",\r\n                    marginLeft: \"50px\" /*210px*/,\r\n                    float: \"right\",\r\n                    marginRight: \"12%\",\r\n                    marginBottom: \"10%\",\r\n                    font: \"normal normal 17px Open Sans\",\r\n                    letterSpacing: \"0px\",\r\n                    background: \"#190F4C\",\r\n                    color: \"#FFFFFF\",\r\n                    opacity: 1,\r\n                    width: \"140px\",\r\n                    height: \"35px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  disabled={load}\r\n                >\r\n                  LOGIN {load ? <CircularProgress size={13} /> : null}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </form>\r\n        {/*------------------- Popup COMPONENT ----------------------------*/}\r\n        {/* { openDialog ? <CommonDialog openCommonDialogStatus={openDialog} setCommonDialogTitle={errorDialogDetails.errorDialogTitle} setDialogContent={errorDialogDetails.errorDialogContent} setDialogButtonContent={errorDialogDetails.errorDialogButtonContent} setRedirectionPagePath={\"\"} /> : null} */}\r\n        {redirection && localStorage.getItem(\"UserID\") !== null ? (\r\n          <Redirect from=\"/Login\" to=\"/Dashboard\" />\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*we can use the required param in the TextField and it will automatically shows the please fill out this field pop up*/\r\n\r\n/*\r\nInvalid = 1,\r\nExpired = 2,\r\nSuccess = 3,\r\nException = 4\r\n*/\r\n\r\nexport default Login;\r\n","import { Suspense } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport LoginPage from \"./Views/Account/Login\";\r\nimport React from \"react\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter  basename={'/sid-oc-hms/'}>\r\n      <Suspense fallback={loading()}>\r\n        <Switch>\r\n          <Route\r\n            path=\"/Dashboard\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Login\"\r\n            render={(props) => <LoginPage {...props} />}\r\n          />\r\n          <Route path=\"/OP\" render={(props) => <Dashboard {...props} />} />\r\n          <Route path=\"/OPGrid\" render={(props) => <Dashboard {...props} />} />\r\n          <Route path=\"/OPTable\" render={(props) => <Dashboard {...props} />} />\r\n          <Route\r\n            path=\"/Appointment\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/Register\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/Schedule\"\r\n            render={(props) => <Dashboard {...props} />}\r\n          />\r\n          <Route exact path=\"/\" render={(props) => <LoginPage {...props} />} />\r\n        </Switch>\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}