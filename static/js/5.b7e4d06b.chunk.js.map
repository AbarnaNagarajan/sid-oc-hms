{"version":3,"sources":["Views/Modules/OP/OPView.js","../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"],"names":["PatientDetails","props","React","useState","openAction","open","setOpen","patientName","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","onClose","id","autoFocus","onClick","color","queryInput","options","arguments","length","undefined","getThemeProps","name","query","replace","supportMatchMedia","window","matchMedia","_props$options","_extends","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","match","setMatch","active","queryList","updateMatch","addListener","removeListener","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","ref","BackdropProps","children","classes","className","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","event","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","withStyles","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","values","xs","_defineProperty","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","DialogTitle","_props$disableTypogra","disableTypography","Typography","component","variant","padding","flex","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","palette","divider","borderBottom","DialogContentText","marginBottom","DialogActions","_props$disableSpacing","disableSpacing","spacing","marginLeft"],"mappings":"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","file":"static/js/5.b7e4d06b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function PatientDetails(props) {\r\n  const [open, setOpen] = React.useState(props.openAction);\r\n  const [patientName] = React.useState(props.patientName);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{patientName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Patient Details\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true\n  }, disableBackdropClick ? {\n    disableBackdropClick: disableBackdropClick\n  } : {}, {\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @deprecated Use the onClose prop with the `reason` argument to filter the `backdropClick` events.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\n   * Callback fired before the dialog exits.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);"],"sourceRoot":""}