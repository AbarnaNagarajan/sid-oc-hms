{"version":3,"sources":["Views/Modules/OP/OPView.js","Views/Modules/OP/OPViewGird.js"],"names":["PatientDetails","props","React","useState","openAction","open","setOpen","patientName","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","onClose","id","autoFocus","onClick","color","defaultTheme","createTheme","useStyles","makeStyles","root","padding","spacing","justifyContent","display","alignItems","flexWrap","textField","width","marginRight","borderBottom","palette","divider","title","flex","fontFamily","fontSize","fontWeight","QuickSearchToolbar","classes","className","variant","component","value","onChange","placeholder","InputProps","startAdornment","endAdornment","size","style","visibility","clearSearch","startIcon","createData","patientname","complication","mobile","address","lastCheckUp","patientdetails","appointment","dataRows","QuickFilteringGrid","searchText","setSearchText","rows","setRows","openPatientDetails","setOpenPatientDetails","redirectAppointment","setRedirectAppointment","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","filter","row","Object","keys","some","field","test","toString","columns","headerName","disableClickEventBubbling","renderCell","params","details","idDetails","openPatientDetailsDialog","openRedirectAppointment","height","background","components","Toolbar","onRowSelected","e","console","log","data","componentsProps","toolbar","event","target","from","to"],"mappings":"yQAUe,SAASA,EAAeC,GACrC,MAAwBC,IAAMC,SAASF,EAAMG,YAA7C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBJ,IAAMC,SAASF,EAAMM,aAApCA,EAAP,oBACMC,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,KAAK,OAElDC,EAAc,WAClBR,GAAQ,IAGV,OACE,8BACE,eAAC,IAAD,CACEI,WAAYA,EACZL,KAAMA,EACNU,QAASD,EACT,kBAAgB,0BAJlB,UAME,cAAC,IAAD,CAAaE,GAAG,0BAAhB,SAA2CT,IAC3C,cAAC,IAAD,UACE,cAAC,IAAD,gCAIF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQU,WAAS,EAACC,QAASJ,EAAaK,MAAM,UAA9C,4B,sPCVV,IAAMC,EAAeC,cACfC,EAAYC,aAChB,SAACf,GAAD,YAAY,CACVgB,KAAM,CACJC,QAASjB,EAAMkB,QAAQ,GAAK,GAAK,GACjCC,eAAgB,gBAChBC,QAAS,OACTC,WAAY,aACZC,SAAU,QAEZC,WAAS,mBACNvB,EAAMI,YAAYC,KAAK,MAAQ,CAC9BmB,MAAO,SAFF,uBAICxB,EAAMkB,QAAQ,EAAG,GAAK,MAJvB,cAKP,qBAAsB,CACpBO,YAAazB,EAAMkB,QAAQ,MANtB,cAQP,+BAAgC,CAC9BQ,aAAa,aAAD,OAAe1B,EAAM2B,QAAQC,WATpC,GAYTC,MAAO,CACLC,KAAM,WACNb,QAAS,cACTc,WAAY,QACZC,SAAU,OACVC,WAAY,WAGhB,CAAErB,iBAGJ,SAASsB,EAAmBzC,GAC1B,IAAM0C,EAAUrB,IAEhB,OACE,sBAAKsB,UAAWD,EAAQnB,KAAxB,UACE,8BACE,cAAC,IAAD,CACEoB,UAAWD,EAAQN,MACnBQ,QAAQ,KACR7B,GAAG,aACH8B,UAAU,MAJZ,kCASF,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CACED,QAAQ,WACRE,MAAO9C,EAAM8C,MACbC,SAAU/C,EAAM+C,SAChBC,YAAY,eACZL,UAAWD,EAAQZ,UACnBmB,WAAY,CACVC,eAAgB,cAAC,IAAD,CAAYX,SAAS,UACrCY,aACE,cAAC,IAAD,CACEf,MAAM,QACN,aAAW,QACXgB,KAAK,QACLC,MAAO,CAAEC,WAAYtD,EAAM8C,MAAQ,UAAY,UAC/C7B,QAASjB,EAAMuD,YALjB,SAOE,cAAC,IAAD,CAAWhB,SAAS,eAK5B,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQa,KAAK,QAAQlC,MAAM,UAAUsC,UAAW,cAAC,IAAD,IAAhD,yBASV,SAASC,EACP1C,EACA2C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLjD,KACA2C,cACAC,eACAC,SACAC,UACAC,cACAC,iBACAC,eAUJ,IAAMC,EAAW,CACfR,EACE,EACA,UACA,QACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,SACA,OACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,QACA,YACA,aACA,MACA,aACA,aACA,QAEFA,EACE,EACA,aACA,QACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,YACA,OACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,YACA,YACA,aACA,MACA,aACA,aACA,QAEFA,EACE,EACA,OACA,QACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,WACA,OACA,aACA,MACA,aACA,MACA,QAEFA,EACE,EACA,YACA,YACA,aACA,MACA,aACA,aACA,QAEFA,EACE,GACA,aACA,QACA,aACA,MACA,aACA,MACA,SAIW,SAASS,IACtB,MAAoCjE,WAAe,IAAnD,mBAAOkE,EAAP,KAAmBC,EAAnB,KACA,EAAwBnE,WAAegE,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAoDrE,YAAe,GAAnE,mBAAOsE,EAAP,KAA2BC,EAA3B,KACA,EAAsDvE,YAAe,GAArE,mBAAOwE,EAAP,KAA4BC,EAA5B,KACMC,EAAgB,SAACC,GACrBR,EAAcQ,GACd,IAAMC,EAAc,IAAIC,OAAoBF,EAhOjCG,QAAQ,2BAA4B,QAgOW,KACpDC,EAAef,EAASgB,QAAO,SAACC,GACpC,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAACC,GAC5B,OAAOT,EAAYU,KAAKL,EAAII,GAAOE,kBAGvClB,EAAQU,IAGJS,EAAU,CACd,CACEH,MAAO,KACPI,WAAY,KACZ3D,MAAO,KAET,CACEuD,MAAO,cACPI,WAAY,OACZ3D,MAAO,KAET,CACEuD,MAAO,eACPI,WAAY,eACZ3D,MAAO,KAET,CACEuD,MAAO,SACPI,WAAY,gBACZ3D,MAAO,KAET,CAAEuD,MAAO,UAAWI,WAAY,QAAS3D,MAAO,KAChD,CACEuD,MAAO,cACPI,WAAY,gBACZ3D,MAAO,KAET,CACEuD,MAAO,iBACPI,WAAY,kBACZ3D,MAAO,IACP4D,2BAA2B,EAC3BC,WAAY,SAACC,GACX,IAAMC,EAAUD,EAAO/C,MACjBiD,EAAYF,EAAO9E,GAEzB,OACE,cAAC,IAAD,CACEA,GAAIgF,EACJnD,QAAQ,WACR1B,MAAM,YACND,QAAS+E,EAJX,SAMGF,MAKT,CACER,MAAO,cACPI,WAAY,cACZ3D,MAAO,IACP4D,2BAA2B,EAC3BC,WAAY,SAACC,GACX,IAAMC,EAAUD,EAAO/C,MACjBiD,EAAYF,EAAO9E,GAEzB,OACE,cAAC,IAAD,CACEA,GAAIgF,EACJnD,QAAQ,WACR1B,MAAM,UACND,QAASgF,EAJX,SAMGH,OAOLE,EAA2B,WAC/BxB,GAAsB,IAGlByB,EAA0B,WAC9BvB,GAAuB,IAOzB,OAJAzE,aAAgB,WACdqE,EAAQL,KACP,CAACA,IAGF,sBAAKZ,MAAO,CAAE6C,OAAQ,IAAKnE,MAAO,OAAQoE,WAAY,WAAtD,UACE,cAAC,IAAD,CACEC,WAAY,CAAEC,QAAS5D,GACvB4B,KAAMA,EACNoB,QAASA,EACTa,cAAe,SAACC,GAAD,OAAOC,QAAQC,IAAI,oBAAqBF,EAAEG,OACzDC,gBAAiB,CACfC,QAAS,CACP9D,MAAOqB,EACPpB,SAAU,SAAC8D,GAAD,OAAWlC,EAAckC,EAAMC,OAAOhE,QAChDS,YAAa,kBAAMoB,EAAc,SAItCJ,EACC,cAAC,UAAD,CAAgBpE,WAAYoE,EAAoBjE,YAAa,KAC3D,KACHmE,EACC,cAAC,IAAD,CAAUsC,KAAK,UAAUC,GAAG,iBAC1B","file":"static/js/6.18a14c6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function PatientDetails(props) {\r\n  const [open, setOpen] = React.useState(props.openAction);\r\n  const [patientName] = React.useState(props.patientName);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{patientName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Patient Details\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  DataGrid,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarFilterButton,\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n} from \"@material-ui/data-grid\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PatientDetails from \"./OPView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction escapeRegExp(value) {\r\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n}\r\n\r\nconst defaultTheme = createTheme();\r\nconst useStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      padding: theme.spacing(0.5, 0.5, 0),\r\n      justifyContent: \"space-between\",\r\n      display: \"flex\",\r\n      alignItems: \"flex-start\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    textField: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        width: \"100%\",\r\n      },\r\n      margin: theme.spacing(1, 0.5, 1.5),\r\n      \"& .MuiSvgIcon-root\": {\r\n        marginRight: theme.spacing(0.5),\r\n      },\r\n      \"& .MuiInput-underline:before\": {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    title: {\r\n      flex: \"1 1 100%\",\r\n      padding: \"8px 8px 0px\",\r\n      fontFamily: \"serif\",\r\n      fontSize: \"25px\",\r\n      fontWeight: \"bold\"\r\n    },\r\n  }),\r\n  { defaultTheme }\r\n);\r\n\r\nfunction QuickSearchToolbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patient Management\r\n        </Typography>\r\n      </div>\r\n      <div>\r\n        <GridToolbarContainer>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            placeholder=\"Searchâ€¦\"\r\n            className={classes.textField}\r\n            InputProps={{\r\n              startAdornment: <SearchIcon fontSize=\"small\" />,\r\n              endAdornment: (\r\n                <IconButton\r\n                  title=\"Clear\"\r\n                  aria-label=\"Clear\"\r\n                  size=\"small\"\r\n                  style={{ visibility: props.value ? \"visible\" : \"hidden\" }}\r\n                  onClick={props.clearSearch}\r\n                >\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              ),\r\n            }}\r\n          />\r\n          <GridToolbarExport />\r\n          <GridToolbarFilterButton />\r\n          <GridToolbarDensitySelector />\r\n          <Button size=\"small\" color=\"primary\" startIcon={<PersonAddIcon />}>\r\n            Add\r\n          </Button>\r\n        </GridToolbarContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction createData(\r\n  id,\r\n  patientname,\r\n  complication,\r\n  mobile,\r\n  address,\r\n  lastCheckUp,\r\n  patientdetails,\r\n  appointment\r\n) {\r\n  return {\r\n    id,\r\n    patientname,\r\n    complication,\r\n    mobile,\r\n    address,\r\n    lastCheckUp,\r\n    patientdetails,\r\n    appointment,\r\n  };\r\n}\r\n\r\nQuickSearchToolbar.propTypes = {\r\n  clearSearch: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst dataRows = [\r\n  createData(\r\n    1,\r\n    \"Cupcake\",\r\n    \"Fever\",\r\n    \"7878787878\",\r\n    \"RMD\",\r\n    \"2021-01-01\",\r\n    \"New\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    2,\r\n    \"Kitkat\",\r\n    \"Cold\",\r\n    \"8989898989\",\r\n    \"SLM\",\r\n    \"2021-02-01\",\r\n    \"Old\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    3,\r\n    \"Munch\",\r\n    \"Head Ache\",\r\n    \"4545454545\",\r\n    \"RMS\",\r\n    \"2021-03-01\",\r\n    \"In Process\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    4,\r\n    \"Dairy Milk\",\r\n    \"Fever\",\r\n    \"5656565656\",\r\n    \"CHE\",\r\n    \"2021-04-01\",\r\n    \"New\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    5,\r\n    \"Five Star\",\r\n    \"Cold\",\r\n    \"1212121212\",\r\n    \"CBE\",\r\n    \"2021-05-01\",\r\n    \"Old\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    6,\r\n    \"Milky Bar\",\r\n    \"Head Ache\",\r\n    \"2323232323\",\r\n    \"TNL\",\r\n    \"2021-06-01\",\r\n    \"In Process\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    7,\r\n    \"Perk\",\r\n    \"Fever\",\r\n    \"2121212121\",\r\n    \"THJ\",\r\n    \"2021-07-01\",\r\n    \"New\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    8,\r\n    \"Doughnut\",\r\n    \"Cold\",\r\n    \"5454545454\",\r\n    \"NML\",\r\n    \"2021-08-01\",\r\n    \"Old\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    9,\r\n    \"Ice Cream\",\r\n    \"Head Ache\",\r\n    \"8787878787\",\r\n    \"ERD\",\r\n    \"2021-09-01\",\r\n    \"In Process\",\r\n    \"Book\"\r\n  ),\r\n  createData(\r\n    10,\r\n    \"Honey Cake\",\r\n    \"Fever\",\r\n    \"3232323232\",\r\n    \"MDU\",\r\n    \"2021-10-01\",\r\n    \"New\",\r\n    \"Book\"\r\n  ),\r\n];\r\n\r\nexport default function QuickFilteringGrid() {\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState(dataRows);\r\n  const [openPatientDetails, setOpenPatientDetails] = React.useState(false);\r\n  const [redirectAppointment, setRedirectAppointment] = React.useState(false);\r\n  const requestSearch = (searchValue) => {\r\n    setSearchText(searchValue);\r\n    const searchRegex = new RegExp(escapeRegExp(searchValue), \"i\");\r\n    const filteredRows = dataRows.filter((row) => {\r\n      return Object.keys(row).some((field) => {\r\n        return searchRegex.test(row[field].toString());\r\n      });\r\n    });\r\n    setRows(filteredRows);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"ID\",\r\n      width: 100,\r\n    },\r\n    {\r\n      field: \"patientname\",\r\n      headerName: \"Name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"complication\",\r\n      headerName: \"Complication\",\r\n      width: 170,\r\n    },\r\n    {\r\n      field: \"mobile\",\r\n      headerName: \"Mobile Number\",\r\n      width: 200,\r\n    },\r\n    { field: \"address\", headerName: \"Place\", width: 150 },\r\n    {\r\n      field: \"lastCheckUp\",\r\n      headerName: \"Last Check Up\",\r\n      width: 200,\r\n    },\r\n    {\r\n      field: \"patientdetails\",\r\n      headerName: \"Patient Details\",\r\n      width: 170,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params) => {\r\n        const details = params.value;\r\n        const idDetails = params.id;\r\n\r\n        return (\r\n          <Button\r\n            id={idDetails}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={openPatientDetailsDialog}\r\n          >\r\n            {details}\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"appointment\",\r\n      headerName: \"Appointment\",\r\n      width: 170,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params) => {\r\n        const details = params.value;\r\n        const idDetails = params.id;\r\n\r\n        return (\r\n          <Button\r\n            id={idDetails}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={openRedirectAppointment}\r\n          >\r\n            {details}\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const openPatientDetailsDialog = () => {\r\n    setOpenPatientDetails(true);\r\n  };\r\n\r\n  const openRedirectAppointment = () => {\r\n    setRedirectAppointment(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setRows(dataRows);\r\n  }, [dataRows]);\r\n\r\n  return (\r\n    <div style={{ height: 550, width: \"100%\", background: \"#fafafa\" }}>\r\n      <DataGrid\r\n        components={{ Toolbar: QuickSearchToolbar }}\r\n        rows={rows}\r\n        columns={columns}\r\n        onRowSelected={(e) => console.log(\"selected rowData:\", e.data)}\r\n        componentsProps={{\r\n          toolbar: {\r\n            value: searchText,\r\n            onChange: (event) => requestSearch(event.target.value),\r\n            clearSearch: () => requestSearch(\"\"),\r\n          },\r\n        }}\r\n      />\r\n      {openPatientDetails ? (\r\n        <PatientDetails openAction={openPatientDetails} patientName={\"\"} />\r\n      ) : null}\r\n      {redirectAppointment ? (\r\n        <Redirect from=\"/OPGrid\" to=\"/Appointment\" />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}