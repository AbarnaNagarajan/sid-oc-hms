{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","Views/Modules/Appointment/Appointment.js"],"names":["Tablelvl2Context","React","TableContext","TableCell","props","ref","role","Component","_props$align","align","classes","className","component","paddingProp","padding","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","other","_objectWithoutProperties","table","tablelvl2","isHeadCell","ariaSort","_extends","clsx","root","concat","capitalize","stickyHeader","withStyles","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","lighten","alpha","divider","darken","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","name","defaultComponent","Table","_props$component","_props$padding","_props$size","_props$stickyHeader","Provider","value","borderCollapse","borderSpacing","spacing","captionSide","TableBody","TableHead","TableRow","_props$hover","hover","_props$selected","selected","outline","action","main","selectedOpacity","useStyles","makeStyles","container","flexWrap","formControl","margin","minWidth","textField","marginLeft","marginRight","patientIds","label","DialogSelect","useState","redirectAppointment","setRedirectAppointment","patientId","setPatientId","createData","calories","fat","carbs","protein","rows","style","height","noValidate","autoComplete","Grid","flex","fontFamily","item","xs","TextField","id","select","onChange","e","target","SelectProps","native","helperText","map","option","defaultValue","InputLabelProps","shrink","Button","onClick","row","from","to"],"mappings":"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","file":"static/js/5.63275501.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, alpha, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'normal');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'normal' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`normal`).\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'normal' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nconst patientIds = [\r\n  {\r\n    value: 0,\r\n    label: \"Please Select\",\r\n  },\r\n  {\r\n    value: 1,\r\n    label: \"AAAA\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"BBBB\",\r\n  },\r\n];\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [redirectAppointment, setRedirectAppointment] = React.useState(false);\r\n  const [patientId, setPatientId] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setPatientId(event.target.value);\r\n  };\r\n\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n\r\n  const rows = [\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: 550, width: \"100%\", background: \"#fafafa\" }}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <Grid container spacing={1} style={{ padding: \"25px\" }}>\r\n          <br />\r\n          <label\r\n            style={{\r\n              fontSize: \"25px\",\r\n              padding: \"4px 4px 0px\",\r\n              flex: \"1 1 100%\",\r\n              fontWeight: \"bolder\",\r\n              fontFamily: \"serif\",\r\n            }}\r\n          >\r\n            Appointment Form\r\n          </label>\r\n          <br />\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Grid\r\n            container\r\n            item\r\n            xs={13}\r\n            spacing={1}\r\n            style={{ padding: \"15px\", background: \"#d7f4ff\" }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={3}\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  padding: \"4px 4px 0px\",\r\n                  flex: \"1 1 100%\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"serif\",\r\n                }}\r\n              >\r\n                Patient Details\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-patient-id\"\r\n                select\r\n                label=\"Patient Id\"\r\n                value={patientId}\r\n                onChange={(e) => handleChange(e, 1)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                style={{ width: \"230px\" }}\r\n                helperText=\"\"\r\n              >\r\n                {patientIds.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ width: \"230px\", fontSize: \"small\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Next appointment\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <Button\r\n                onClick={() => setRedirectAppointment(true)}\r\n                style={{ background: \"#3f51b5\", color: \"white\" }}\r\n              >\r\n                Book\r\n              </Button>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <Button\r\n                onClick={() => setRedirectAppointment(true)}\r\n                style={{ background: \"brown\", color: \"white\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={3}></Grid>\r\n          </Grid>\r\n          <Grid container item xs={13} spacing={1}>\r\n            <div style={{ width: \"100%\", color: \"#fff\" }}>.</div>\r\n          </Grid>\r\n          <Grid container item xs={13} spacing={1}>\r\n            <label\r\n              style={{\r\n                fontSize: \"20px\",\r\n                padding: \"4px 4px 0px\",\r\n                flex: \"1 1 100%\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"serif\",\r\n              }}\r\n            >\r\n              Future Appointment Details\r\n            </label>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {redirectAppointment ? (\r\n        <Redirect from=\"/Appointment\" to=\"/OPGrid\" />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}